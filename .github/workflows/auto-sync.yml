name: Auto-Sync Fork

on:
  schedule:
    - cron: "*/5 * * * *"  # Every 5 minutes (adjust as needed)
  workflow_dispatch:  # Allows manual triggering

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Fork Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config user.name "GitHub Actions Bot"
        git config user.email "actions@github.com"

    - name: Add Upstream Repository
      run: |
        if ! git remote | grep -q upstream; then
          git remote add upstream https://github.com/Vishu-Organization/FlavorHive
        fi
        git fetch upstream

    - name: Create Branch for Upstream Changes
      run: |
        # Fetch the latest changes from upstream
        git fetch upstream

        # Create or reset the branch update-from-upstream to track upstream/main
        git checkout -B update-from-upstream upstream/main

        # Merge the fork's main branch into the upstream branch, resolving conflicts automatically
        git merge origin/main --no-edit --allow-unrelated-histories \
        --strategy=recursive --strategy-option=theirs || {
          echo "Merge failed, attempting to handle conflicts.";
          git status
          git log --oneline -n 10
          git merge --abort || true
          git reset --hard upstream/main
          echo "Retrying safe merge."
          git merge origin/main --strategy=recursive --strategy-option=theirs --no-edit
        }

        # Check if there are any changes after the merge
        if git diff --quiet; then
          echo "No changes detected. Exiting."
          exit 0
        fi

    - name: Attempt cherry-pick
      run: |
        git cherry-pick 4e1ee8f73b2fb1b6cb11ef418c243db3b8cc652d -m 1 || {
          echo "Cherry-pick failed. Investigating..."; 
          git status;
          git log -n 5 --oneline;
          exit 1;
        }

    - name: Debug Git Status
      run: |
        git status
        git log -3 --oneline
        git remote -v
        git branch -vv

    - name: Push Branch to Fork
      if: success()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
         git push -u origin update-from-upstream || echo "No changes to push."

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "Sync changes from upstream"
        branch: update-from-upstream
        base: main
        title: "Merge Updates from Upstream"
        body: |
          This pull request merges changes from the upstream repository into the fork.
        labels: "sync"
        committer: GitHub <noreply@github.com>
        author: 14vasudha <14vasudha@users.noreply.github.com>
        signoff: false
        delete-branch: false
        draft: false
        cherry-pick: "4e1ee8f73b2fb1b6cb11ef418c243db3b8cc652d"
